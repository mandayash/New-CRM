'use client';

import { MessageSquare, CheckCircle, AlertCircle } from 'lucide-react';
import { Card, CardContent } from "@/components/ui/card";

interface StatCardProps {
  icon: React.ReactNode;
  title: string;
  value: number;
  previousValue: number;
  percentageChange: number;
}

const StatCard = ({
  icon,
  title,
  value,
  previousValue,
  percentageChange,
}: StatCardProps) => {
  const isIncrease = percentageChange > 0;
  
  return (
    <Card className="overflow-hidden h-full">
      <CardContent className="p-4 sm:p-6">
        <div className="flex flex-col sm:flex-row items-start gap-4 sm:gap-6">
          {/* Left Section */}
          <div className="flex items-start gap-3 sm:gap-4 min-w-0">
            {/* Icon container */}
            <div className="h-10 w-10 sm:h-12 sm:w-12 flex-shrink-0 flex items-center justify-center rounded-full bg-red-50">
              {icon}
            </div>
            
            {/* Title and value */}
            <div className="flex flex-col min-w-0">
              <p className="text-sm sm:text-sm text-[#080808] font-medium truncate">{title}</p>
              <p className="text-xl sm:text-2xl lg:text-3xl font-black text-primary mt-0.5 sm:mt-1 truncate">
                {value.toLocaleString()}
              </p>
            </div>
          </div>

          {/* Right Section */}
          <div className="flex items-center sm:items-end justify-between sm:justify-end sm:flex-col gap-2 sm:gap-1 flex-shrink-0 ml-auto">
            {/* Percentage change */}
            <div className={`flex items-center ${
              isIncrease ? 'text-green-600' : 'text-red-600'
            }`}>
              <span className="text-xs sm:text-sm font-medium whitespace-nowrap">
                {isIncrease ? '↑' : '↓'} {Math.abs(percentageChange)}%
              </span>
            </div>
            
            {/* Previous value info */}
            <div className="flex flex-col items-end">
              <div className="text-[10px] sm:text-xs text-gray-500 text-right">
                <span className="sm:block truncate">{title}</span>
                <span className="ml-1 sm:ml-0 sm:block">Bulan Lalu</span>
              </div>
              <span className="text-xs sm:text-sm text-red-600 font-medium whitespace-nowrap">
                {previousValue.toLocaleString()}
              </span>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

const StatisticsCards = () => {
  const stats = [
    {
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="30" height="31" viewBox="0 0 30 31" fill="none">
      <path d="M15 3V10.5L17.5 8" stroke="#CF0000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M15 10.5L12.5 8" stroke="#CF0000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M8.75 15.5C3.75 15.5 3.75 17.7375 3.75 20.5V21.75C3.75 25.2 3.75 28 10 28H20C25 28 26.25 25.2 26.25 21.75V20.5C26.25 17.7375 26.25 15.5 21.25 15.5C20 15.5 19.65 15.7625 19 16.25L17.725 17.6C16.25 19.175 13.75 19.175 12.2625 17.6L11 16.25C10.35 15.7625 10 15.5 8.75 15.5Z" stroke="#CF0000" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M6.25 15.4998V10.4998C6.25 7.9873 6.25 5.9123 10 5.5498" stroke="#CF0000" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
      <path d="M23.75 15.4998V10.4998C23.75 7.9873 23.75 5.9123 20 5.5498" stroke="#CF0000" stroke-width="1.5" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>,
      title: 'Total Feedback',
      value: 1121,
      previousValue: 1002,
      percentageChange: 8.20,
    },
    {
      icon:<svg xmlns="http://www.w3.org/2000/svg" width="31" height="31" viewBox="0 0 31 31" fill="none">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M13.3008 6.03341C12.9579 6.33029 12.5471 6.64291 12.0774 6.83827C11.6042 7.0351 11.0931 7.10214 10.6431 7.13171C10.3485 7.15107 10.0198 7.15632 9.72015 7.1611C9.57798 7.16336 9.44236 7.16553 9.32005 7.16905C8.41886 7.19497 7.96012 7.30577 7.71626 7.54963C7.47376 7.79213 7.36743 8.2372 7.34454 9.13284C7.34161 9.24754 7.33986 9.37338 7.33803 9.50529C7.33378 9.81134 7.32907 10.1502 7.30808 10.4588C7.27703 10.9153 7.20612 11.4303 7.00401 11.9129C6.80401 12.3905 6.49125 12.8051 6.19103 13.1529C5.98622 13.3902 5.74996 13.6368 5.53556 13.8606C5.44432 13.9558 5.35703 14.0469 5.27781 14.1314C4.98817 14.4404 4.76436 14.7027 4.61208 14.9497C4.46359 15.1906 4.41663 15.3641 4.41663 15.5C4.41663 15.6346 4.4641 15.811 4.61583 16.0576C4.77056 16.3091 4.99743 16.5764 5.28797 16.8876C5.37103 16.9766 5.46317 17.073 5.55942 17.1738C5.77062 17.3949 6.00164 17.6367 6.20004 17.8659C6.49692 18.2087 6.80953 18.6195 7.00489 19.0892C7.20172 19.5624 7.26876 20.0736 7.29834 20.5235C7.3177 20.8181 7.32294 21.1469 7.32772 21.4465C7.32999 21.5886 7.33215 21.7243 7.33567 21.8466C7.36159 22.7478 7.47239 23.2065 7.71626 23.4504C7.95875 23.6929 8.40383 23.7992 9.29946 23.8221C9.41418 23.825 9.54003 23.8268 9.67196 23.8286C9.978 23.8328 10.3168 23.8376 10.6254 23.8585C11.082 23.8896 11.597 23.9605 12.0796 24.1626C12.5571 24.3626 12.9718 24.6754 13.3195 24.9756C13.5568 25.1804 13.8034 25.4167 14.0272 25.6311C14.1224 25.7223 14.2136 25.8096 14.2981 25.8888C14.607 26.1785 14.8693 26.4023 15.1163 26.5546C15.3572 26.703 15.5307 26.75 15.6666 26.75C15.8012 26.75 15.9776 26.7025 16.2242 26.5508C16.4758 26.3961 16.743 26.1692 17.0542 25.8787C17.1432 25.7956 17.2397 25.7035 17.3404 25.6072C17.5615 25.396 17.8033 25.165 18.0325 24.9666C18.3754 24.6697 18.7861 24.3571 19.2558 24.1617C19.729 23.9649 20.2402 23.8979 20.6902 23.8683C20.9848 23.8489 21.3135 23.8437 21.6131 23.8389C21.7553 23.8366 21.8909 23.8345 22.0132 23.831C22.9144 23.805 23.3731 23.6942 23.617 23.4504C23.8595 23.2079 23.9658 22.7628 23.9887 21.8672C23.9916 21.7524 23.9934 21.6266 23.9952 21.4947C23.9995 21.1886 24.0042 20.8498 24.0252 20.5412C24.0562 20.0847 24.1271 19.5697 24.3292 19.0871C24.5292 18.6095 24.842 18.1949 25.1422 17.8471C25.347 17.6099 25.5833 17.3632 25.7977 17.1394C25.8889 17.0442 25.9762 16.9531 26.0554 16.8686C26.3451 16.5596 26.5689 16.2973 26.7212 16.0503C26.8697 15.8094 26.9166 15.6359 26.9166 15.5C26.9166 15.3654 26.8692 15.189 26.7174 14.9424C26.5627 14.6909 26.3358 14.4236 26.0453 14.1124C25.9622 14.0234 25.8701 13.927 25.7738 13.8262C25.5626 13.6051 25.3316 13.3633 25.1332 13.1341C24.8363 12.7912 24.5237 12.3805 24.3284 11.9108C24.1315 11.4376 24.0645 10.9264 24.0349 10.4765C24.0156 10.1819 24.0103 9.85315 24.0055 9.55355C24.0033 9.41137 24.0011 9.27574 23.9976 9.15342C23.9717 8.25224 23.8609 7.7935 23.617 7.54963C23.3745 7.30714 22.9294 7.2008 22.0338 7.17792C21.9191 7.17499 21.7933 7.17324 21.6613 7.17141C21.3553 7.16715 21.0165 7.16245 20.7078 7.14145C20.2513 7.11041 19.7363 7.0395 19.2537 6.83738C18.7761 6.63738 18.3615 6.32462 18.0137 6.02441C17.7765 5.8196 17.5299 5.58334 17.3061 5.36893C17.2108 5.27769 17.1197 5.1904 17.0352 5.11119C16.7262 4.82155 16.4639 4.59774 16.2169 4.44545C15.976 4.29696 15.8025 4.25 15.6666 4.25C15.532 4.25 15.3557 4.29747 15.109 4.4492C14.8575 4.60394 14.5903 4.8308 14.279 5.12135C14.19 5.2044 14.0936 5.29654 13.9928 5.39279C13.7718 5.604 13.5299 5.83502 13.3008 6.03341ZM14.1266 2.85219C14.5508 2.5912 15.0688 2.375 15.6666 2.375C16.2632 2.375 16.7781 2.58878 17.2008 2.84935C17.6174 3.10612 17.9937 3.43968 18.3176 3.7433C18.4355 3.85384 18.5443 3.95816 18.6483 4.05789C18.8528 4.254 19.0388 4.43233 19.239 4.60511C19.5313 4.85751 19.77 5.02082 19.978 5.10793C20.1809 5.19292 20.457 5.24506 20.835 5.27078C21.0932 5.28833 21.3435 5.29167 21.6207 5.29537C21.7654 5.2973 21.9174 5.29933 22.0817 5.30353C22.9058 5.32459 24.1072 5.38818 24.9428 6.22381C25.7771 7.05807 25.8479 8.26925 25.8718 9.09951C25.8769 9.27693 25.8794 9.43925 25.8817 9.59313C25.8857 9.86046 25.8894 10.1023 25.9059 10.3535C25.9309 10.7337 25.981 11.0019 26.0596 11.1907C26.1396 11.3832 26.2972 11.614 26.5507 11.9069C26.72 12.1024 26.8939 12.2842 27.0852 12.4842C27.1896 12.5933 27.2991 12.7078 27.4159 12.8329C27.7215 13.1603 28.0565 13.5406 28.3144 13.96C28.5754 14.3842 28.7916 14.9022 28.7916 15.5C28.7916 16.0965 28.5778 16.6115 28.3173 17.0342C28.0605 17.4507 27.7269 17.8271 27.4233 18.151C27.3128 18.2689 27.2085 18.3777 27.1087 18.4817C26.9126 18.6862 26.7343 18.8722 26.5615 19.0723C26.3091 19.3647 26.1458 19.6034 26.0587 19.8114C25.9737 20.0143 25.9216 20.2903 25.8959 20.6684C25.8783 20.9266 25.875 21.1769 25.8713 21.4541C25.8693 21.5988 25.8673 21.7508 25.8631 21.9151C25.842 22.7392 25.7785 23.9406 24.9428 24.7762C24.1086 25.6105 22.8974 25.6813 22.0671 25.7052C21.8897 25.7103 21.7274 25.7127 21.5735 25.7151C21.3062 25.7191 21.0643 25.7227 20.8131 25.7393C20.4329 25.7642 20.1648 25.8144 19.9759 25.893C19.7835 25.973 19.5526 26.1306 19.2598 26.3841C19.0642 26.5534 18.8824 26.7273 18.6824 26.9186C18.5733 27.023 18.4588 27.1325 18.3337 27.2493C18.0063 27.5549 17.626 27.8898 17.2067 28.1478C16.7824 28.4088 16.2644 28.625 15.6666 28.625C15.0701 28.625 14.5551 28.4112 14.1324 28.1507C13.7159 27.8939 13.3395 27.5603 13.0157 27.2567C12.8978 27.1462 12.789 27.0418 12.685 26.9421C12.4804 26.746 12.2944 26.5677 12.0943 26.3949C11.8019 26.1425 11.5632 25.9792 11.3553 25.8921C11.1523 25.8071 10.8763 25.7549 10.4982 25.7292C10.2401 25.7117 9.98974 25.7083 9.71251 25.7046C9.56784 25.7027 9.41583 25.7007 9.25156 25.6965C8.42747 25.6754 7.22606 25.6118 6.39043 24.7762C5.55617 23.9419 5.48533 22.7308 5.46145 21.9005C5.45634 21.7231 5.45389 21.5608 5.45157 21.4069C5.44753 21.1395 5.44388 20.8977 5.42737 20.6465C5.40238 20.2663 5.35223 19.9981 5.27367 19.8093C5.19364 19.6168 5.03604 19.386 4.7825 19.0931C4.61323 18.8976 4.43933 18.7158 4.24802 18.5158C4.14367 18.4067 4.03414 18.2922 3.91735 18.1671C3.61171 17.8397 3.2768 17.4594 3.01882 17.04C2.75783 16.6158 2.54163 16.0978 2.54163 15.5C2.54163 14.9035 2.75541 14.3885 3.01597 13.9658C3.27275 13.5493 3.60631 13.1729 3.90993 12.849C4.02046 12.7311 4.12479 12.6223 4.22452 12.5183C4.42063 12.3138 4.59896 12.1278 4.77173 11.9277C5.02413 11.6353 5.18745 11.3966 5.27456 11.1886C5.35955 10.9857 5.41169 10.7097 5.4374 10.3316C5.45496 10.0734 5.4583 9.82311 5.462 9.54588C5.46393 9.40121 5.46596 9.24921 5.47015 9.08494C5.49121 8.26085 5.5548 7.05944 6.39043 6.22381C7.22469 5.38955 8.43587 5.3187 9.26614 5.29482C9.44355 5.28972 9.60587 5.28727 9.75974 5.28494C10.0271 5.28091 10.2689 5.27726 10.5201 5.26075C10.9004 5.23576 11.1685 5.18561 11.3574 5.10705C11.5498 5.02702 11.7807 4.86942 12.0735 4.61588C12.269 4.44661 12.4508 4.27271 12.6508 4.0814C12.7599 3.97704 12.8744 3.86751 12.9996 3.75072C13.327 3.44508 13.7072 3.11017 14.1266 2.85219Z" fill="#CF0000"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M21.5012 12.0404C21.8586 12.415 21.8446 13.0084 21.47 13.3658L14.5911 19.9283C14.2287 20.2741 13.6584 20.2739 13.2963 19.9278L9.86267 16.6465C9.48834 16.2888 9.47488 15.6954 9.8326 15.321C10.1903 14.9467 10.7838 14.9333 11.1581 15.291L13.9445 17.9538L20.1757 12.0092C20.5504 11.6518 21.1438 11.6657 21.5012 12.0404Z" fill="#CF0000"/>
    </svg>,
      title: 'Feedback Selesai',
      value: 932,
      previousValue: 801,
      percentageChange: 2,
    },
    {
      icon: <svg xmlns="http://www.w3.org/2000/svg" width="31" height="31" viewBox="0 0 31 31" fill="none">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M15.3334 8.93751C15.8511 8.93751 16.2709 9.35724 16.2709 9.87501V16.4375C16.2709 16.9553 15.8511 17.375 15.3334 17.375C14.8156 17.375 14.3959 16.9553 14.3959 16.4375V9.87501C14.3959 9.35724 14.8156 8.93751 15.3334 8.93751Z" fill="#CF0000"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M19.6094 3.31251C19.8537 3.3119 20.0958 3.35937 20.3219 3.45221C20.5485 3.54529 20.7546 3.68216 20.9282 3.85499L20.9299 3.85662L26.9784 9.90514C27.1512 10.0788 27.2881 10.2849 27.3812 10.5115C27.474 10.7376 27.5215 10.9798 27.5209 11.2242L27.5209 11.2259L27.5209 11.2227V11.2242V19.744C27.5209 20.2413 27.3233 20.7182 26.9717 21.0698L20.9032 27.1383C20.5516 27.49 20.0746 27.6875 19.5774 27.6875H11.0342C10.5369 27.6875 10.06 27.49 9.70837 27.1383L3.69505 21.125C3.34342 20.7734 3.14587 20.2965 3.14587 19.7992V11.1578C3.14587 10.657 3.34616 10.1771 3.70209 9.82494L9.73595 3.85468C10.087 3.50733 10.5609 3.31251 11.0547 3.31251H19.6094ZM19.6091 5.18751L25.6459 11.2243V19.744L19.5774 25.8125H11.0342L5.02087 19.7992V11.1578L11.0547 5.18751H19.6091Z" fill="#CF0000"/>
      <path d="M15.3334 22.0625C16.11 22.0625 16.7396 21.4329 16.7396 20.6563C16.7396 19.8796 16.11 19.25 15.3334 19.25C14.5567 19.25 13.9271 19.8796 13.9271 20.6563C13.9271 21.4329 14.5567 22.0625 15.3334 22.0625Z" fill="#CF0000"/>
    </svg>,
      title: 'Feedback Belum',
      value: 189,
      previousValue: 219,
      percentageChange: -3.1,
    }
  ];

  return (
    <div className="pt-12 sm:pt-6"> 
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {stats.map((stat) => (
          <StatCard
            key={stat.title}
            {...stat}
          />
        ))}
      </div>
    </div>
  );
};

export default StatisticsCards;